x-qiime2-service: &qiime2-service
  image: quay.io/qiime2/metagenome:2024.5
  volumes:
    - /media/shuai/TOSHBA/mm-dev/RawData:/RawData
    - /media/shuai/TOSHBA/mm-dev/ResultData:/ResultData
    - /media/shuai/TOSHBA/mm-dev/ManualData:/ManualData
    - /media/shuai/TOSHBA/mm-dev/ReferenceData:/ReferenceData
    - /tmp:/tmp
  user: "1000:1000"
  restart: no  

services:
  # 导入特征表
  qiime2_import_feature:
    <<: *qiime2-service
    container_name: qiime2_import_feature
    command:
      [
        "qiime",
        "tools",
        "import",
        "--input-path",
        "/ResultData/SRR12345678.biom",
        "--type",
        "FeatureTable[Frequency]",
        "--input-format",
        "BIOMV210Format",
        "--output-path",
        "/ResultData/feature-table.qza",
      ]

  # 导入分类表
  qiime2_import_taxonomy:
    <<: *qiime2-service
    container_name: qiime2_import_taxonomy
    command:
      [
        "qiime",
        "tools",
        "import",
        "--input-path",
        "/ResultData/merged_taxonomy_convert.tsv",
        "--type",
        "FeatureData[Taxonomy]",
        "--input-format",
        "HeaderlessTSVTaxonomyFormat",
        "--output-path",
        "/ResultData/taxonomy.qza"
      ]

  # 过滤特征表
  qiime2_filter_features:
    <<: *qiime2-service
    container_name: qiime2_filter_features
    depends_on:
      - qiime2_import_feature
    command:
      [
        "qiime",
        "feature-table",
        "filter-features",
        "--i-table",
        "/ResultData/feature-table.qza",
        "--p-min-frequency",
        "1",
        "--o-filtered-table",
        "/ResultData/filtered-table.qza"
      ]

  # 最终过滤特征表
  qiime2_final_filter:
    <<: *qiime2-service
    container_name: qiime2_final_filter
    depends_on:
      - qiime2_filter_features
    command:
      [
        "qiime",
        "feature-table",
        "filter-features",
        "--i-table",
        "/ResultData/filtered-table.qza",
        "--p-min-samples",
        "1",
        "--o-filtered-table",
        "/ResultData/final-table.qza"
      ]

  # 稀释特征表
  # qiime2_rarefy:
  #   <<: *qiime2-service
  #   container_name: qiime2_rarefy
  #   command:
  #     [
  #       "qiime",
  #       "feature-table",
  #       "rarefy",
  #       "--i-table",
  #       "/ResultData/final-table.qza",
  #       "--p-sampling-depth",
  #       "None",
  #       "--o-rarefied-table",
  #       "/ResultData/rarefied-table.qza"
  #     ]

  # 计算Alpha多样性
  qiime2_alpha_diversity:
    <<: *qiime2-service
    container_name: qiime2_alpha_diversity
    depends_on:
      - qiime2_final_filter
    command:
      [
        "qiime",
        "diversity",
        "alpha",
        "--i-table",
        "/ResultData/final-table.qza",
        "--p-metric",
        "shannon",
        "--o-alpha-diversity",
        "/ResultData/shannon.qza"
      ]

  # 导出结果
  qiime2_export_results:
    <<: *qiime2-service
    container_name: qiime2_export_results
    depends_on:
      - qiime2_alpha_diversity
    command:
      [
        "qiime",
        "tools",
        "export",
        "--input-path",
        "/ResultData/shannon.qza",
        "--output-path",
        "/ResultData/shannon"
      ]

  # 计算Beta多样性
  qiime2_beta_diversity:
    <<: *qiime2-service
    container_name: qiime2_beta_diversity
    depends_on:
      - qiime2_final_filter
    command:
      [
        "qiime",
        "diversity",
        "beta",
        "--i-table",
        "/ResultData/final-table.qza",
        "--p-metric",
        "braycurtis",
        "--o-distance-matrix",
        "/ResultData/braycurtis.qza"
      ]

# 导出Beta多样性结果
  qiime2_export_beta_diversity:
    <<: *qiime2-service
    container_name: qiime2_export_beta_diversity
    depends_on:
      - qiime2_beta_diversity
    command:
      [
        "qiime",
        "tools",
        "export",
        "--input-path",
        "/ResultData/braycurtis.qza",
        "--output-path",
        "/ResultData/braycurtis"
      ]

  # 进行主坐标分析（PCoA）
  qiime2_pcoa:
    <<: *qiime2-service
    container_name: qiime2_pcoa
    depends_on:
      - qiime2_beta_diversity
    command:
      [
        "qiime",
        "diversity",
        "pcoa",
        "--i-distance-matrix",
        "/ResultData/braycurtis.qza",
        "--o-pcoa",
        "/ResultData/pcoa.qza",
      ]

  # 生成Emperor可视化图
  # qiime2_emperor_plot:
  #   <<: *qiime2-service
  #   container_name: qiime2_emperor_plot
  #   command:
  #     [
  #       "qiime",
  #       "emperor",
  #       "plot",
  #       "--i-pcoa",
  #       "/ResultData/pcoa.qza",
  #       "--m-metadata-file",
  #       "/ResultData/sample_metadata.tsv",
  #       "--o-visualization",
  #       "/ResultData/braycurtis-emperor.qzv"
  #     ]

  # 添加伪计数
  qiime2_add_pseudocount:
    <<: *qiime2-service
    container_name: qiime2_add_pseudocount
    depends_on:
      - qiime2_final_filter
    command:
      [
        "qiime",
        "composition",
        "add-pseudocount",
        "--i-table",
        "/ResultData/final-table.qza",
        "--o-composition-table",
        "/ResultData/comp-table.qza"
      ]

  # 进行ANCOM分析
  # qiime2_ancom:
  #   <<: *qiime2-service
  #   container_name: qiime2_ancom
  #   command:
  #     [
  #       "qiime",
  #       "composition",
  #       "ancom",
  #       "--i-table",
  #       "/ResultData/comp-table.qza",
  #       "--m-metadata-file",
  #       "/ResultData/sample_metadata.tsv",
  #       "--m-metadata-column",
  #       "bioproject",
  #       "--o-visualization",
  #       "/ResultData/ancom-treatments.qzv"
  #     ]

volumes:
  RawData:
    driver: local
  ResultData:
    driver: local
  ManualData:
    driver: local
  ReferenceData:
    driver: local
  tmp:
    driver: local