services:
  kraken2:
    build:
      context: .
      dockerfile: Dockerfile
    image: shuai/kraken2:2.1.3
    container_name: kraken2
    # tty: true
    # stdin_open: true
    # command: [ "bash" ]
    command:
      [
        "--paired",
        "--db",
        "/ManualData/kraken2_db/08gb",
        "--output",
        "/ResultData/kraken_output_m11213.kraken",
        "--report",
        "/ResultData/kraken_taxonomy_m11213.report",
        "--use-names",
        "--threads",
        "16",
        "--confidence",
        "0.1",
        "--minimum-base-quality",
        "20",
        "--minimum-hit-groups",
        "2",
        # "--classified-out",
      # "/ResultData/kraken2_classified.fastq",
      # "--unclassified-out",
      # "/ResultData/kraken2_unclassified.fastq",
        "--memory-mapping",
        # "--quick",
      # "--report-zero-counts",
      # "--gzip-compressed",
        "/RawData/sub_test/sub_m11213.NextSeq.R1.fastq.gz",
        "/RawData/sub_test/sub_m11213.NextSeq.R2.fastq.gz"
      ]
    volumes:
      - /media/shuai/TOSHBA/mm-dev/RawData:/RawData
      - /media/shuai/TOSHBA/mm-dev/ResultData:/ResultData
      - /media/shuai/TOSHBA/mm-dev/ManualData:/ManualData
      - /media/shuai/TOSHBA/mm-dev/ReferenceData:/ReferenceData
    working_dir: /
    # user: "ubuntu"
    user: "1000:1000" # 使用主机用户的 UID 和 GID
    environment:
      - COMPOSE_PARALLEL_LIMIT=16
volumes:
  RawData:
    driver: local
  ResultData:
    driver: local
  ManualData:
    driver: local
  ReferenceData:
    driver: local
